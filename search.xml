<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Linux操作</title>
      <link href="/2018/10/15/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2018/10/15/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux系统下的操作系统"><a href="#Linux系统下的操作系统" class="headerlink" title="Linux系统下的操作系统"></a>Linux系统下的操作系统</h1><h2 id="1-攻击方式"><a href="#1-攻击方式" class="headerlink" title="1. 攻击方式"></a>1. 攻击方式</h2><p>PING to death  ———- 拼到死</p><p>DOS - Deny of Service ————— 拒绝服务攻击</p><p>DDoS - Distributed Deny of Service ———– 分布式拒绝服务攻击</p><h2 id="2-查看本机IP"><a href="#2-查看本机IP" class="headerlink" title="2. 查看本机IP"></a>2. 查看本机IP</h2><p>ifconfig</p><h2 id="3-连接其它的服务器"><a href="#3-连接其它的服务器" class="headerlink" title="3. 连接其它的服务器"></a>3. 连接其它的服务器</h2><p>ssh <a href="mailto:root@IP" target="_blank" rel="noopener">root@IP</a></p><p>断开某个用户的终端连接： </p><p>​    命令：fuser -k /dev/pts/x  （x为who下看到的这个用户的pts序号，比如本例中的pts/0,pts/1）   </p><p>​            example： fuser -k /dev/pts/0</p><h2 id="4-给其它的服务器拷贝文件"><a href="#4-给其它的服务器拷贝文件" class="headerlink" title="4. 给其它的服务器拷贝文件"></a>4. 给其它的服务器拷贝文件</h2><p>一个用户操作另外两个用户的文件：</p><p> scp  用户名@IP：/绝对路径/文件名 用户名@IP：/绝对路径/文件命名</p><p>从本地到远程用户：</p><p>scp /绝对路径/文件名 用户名@IP：/绝对路径/文件命名</p><h2 id="5-操作远端用户"><a href="#5-操作远端用户" class="headerlink" title="5. 操作远端用户"></a>5. 操作远端用户</h2><p>sftp 用户名@IP</p><p>​    用户名密码</p><p>​    get 要下载的文件名</p><p>​    put 上传的文件名</p><p>​    lls 查看本地目录</p><p>在输入的命令前加上<l>，就可以操作本地文件，直接输入命令，操作连接的用户文件</l></p><p>​    l(命令) 操作本地文件</p><h2 id="6-网络端口"><a href="#6-网络端口" class="headerlink" title="6. 网络端口"></a>6. 网络端口</h2><p>netstat -na | grep 80   查询网络状态</p><p>netstat -nap | grep 80   查看占用端口的进程</p><h2 id="7-服务操作"><a href="#7-服务操作" class="headerlink" title="7. 服务操作"></a>7. 服务操作</h2><p>systemctl start &lt;进程的名字&gt;       开启服务</p><p>systemctl stop <name>       禁用服务</name></p><p>systemctl restart <name>    重启服务</name></p><p>systemctl status <name>    查看服务状态</name></p><p>systemctl senable <name>  开机自启服务</name></p><p>systemctl disable <name>   禁用开机自启服务</name></p><p>计算机网络分层结构模型</p><p>Internet —– TCP/IP协议族</p><p>TCP - Transfer Control Protocol - 传输控制协议</p><p>UDP - User Datagram Protocol - 用户数据报协议</p><p>IP - Internet Protocol - 网际协议</p><p>TCP/IP模型</p><p>应用层（定义应用之间如何传输数据，定义应用级协议）- HTTP/SMTP/SSH/POP3/FTP/ICQ</p><p>传输层（端到端传输数据）- TCP/ UDP</p><p>网络层/网际层 （寻址和路由）</p><p>物理链路层 （数据分帧 + 校验）- 冗余校验码</p><h2 id="Linux常用的防火墙服务有firewall和iptables"><a href="#Linux常用的防火墙服务有firewall和iptables" class="headerlink" title="Linux常用的防火墙服务有firewall和iptables"></a>Linux常用的防火墙服务有firewall和iptables</h2><ul><li><p>systemctl start firewalld    开启防火墙</p></li><li><p>systemctl enable firewalld     设置开机自启防火墙</p></li></ul><ul><li><p>firewalls-cmd  –add-port=80/tcp  –permanent</p></li><li><p>firewalls-cmd  –add-service=80/tcp  –permanent</p></li></ul><ul><li>top —— 查看进程（CPU的利用率排序）</li><li>ctrl + z     —— 把进程放到后台</li><li>ctrl + c    ——  终止进程</li><li>jobs —— 查看后台进程<h2 id="如果执行命令时在命令后面加上-amp-就可以将命令置于后台运行"><a href="#如果执行命令时在命令后面加上-amp-就可以将命令置于后台运行" class="headerlink" title="如果执行命令时在命令后面加上&amp;就可以将命令置于后台运行"></a>如果执行命令时在命令后面加上&amp;就可以将命令置于后台运行</h2>_bg %编号 —— 让暂停的进程继续在后台运行background</li><li>fg %编号 —— 将后台的进程放到前台foreground</li></ul><h2 id="8-Linux根目录下"><a href="#8-Linux根目录下" class="headerlink" title="8. Linux根目录下"></a>8. Linux根目录下</h2><h2 id="http-www-runoob-com-linux-linux-system-contents-html"><a href="#http-www-runoob-com-linux-linux-system-contents-html" class="headerlink" title="http://www.runoob.com/linux/linux-system-contents.html"></a><a href="http://www.runoob.com/linux/linux-system-contents.html" target="_blank" rel="noopener">http://www.runoob.com/linux/linux-system-contents.html</a></h2><p>etc:保存下载安装的文件夹</p><p>安装的软件名.conf ———- 安装的软件的配置</p><p>dev: 设备管理器</p><p>tmp ————— 临时文件</p><p>usr ————– 用户目录</p><h2 id="9-Linux环境"><a href="#9-Linux环境" class="headerlink" title="9. Linux环境"></a>9. Linux环境</h2><p>Linux的shall也是一个交互式的环境，可以输入代码</p><p>执行多个程序可以用分号 隔开 / &amp;&amp; 隔开 / 并列符号 ||</p><p><img src="/2018/10/15/Linux服务器/Linux1.jpg" alt="Linux1"></p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>安装Python</title>
      <link href="/2018/10/15/CentOS%E5%AE%89%E8%A3%85Python3.7/"/>
      <url>/2018/10/15/CentOS%E5%AE%89%E8%A3%85Python3.7/</url>
      
        <content type="html"><![CDATA[<p>CentOS安装Python3.7</p><h2 id="1-下载Python源代码："><a href="#1-下载Python源代码：" class="headerlink" title="1.下载Python源代码："></a>1.下载Python源代码：</h2><p><a href="https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz</a></p><h2 id="2-解压缩"><a href="#2-解压缩" class="headerlink" title="2.解压缩"></a>2.解压缩</h2><pre><code>gunzip Python-3.7.0.tgz</code></pre><h2 id="3-解归档"><a href="#3-解归档" class="headerlink" title="3.解归档"></a>3.解归档</h2><pre><code>tar -xvf Python-3.7.0.tar</code></pre><h2 id="4-安装底层依赖库"><a href="#4-安装底层依赖库" class="headerlink" title="4.安装底层依赖库"></a>4.安装底层依赖库</h2><pre><code>yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel libffi-devel</code></pre><h2 id="5-安装前的配置"><a href="#5-安装前的配置" class="headerlink" title="5.安装前的配置"></a>5.安装前的配置</h2><pre><code> ./configure --prefix=/usr/local/Python37 --enable-optimizations</code></pre><h2 id="6-构建安装"><a href="#6-构建安装" class="headerlink" title="6.构建安装"></a>6.构建安装</h2><pre><code>make &amp;&amp; make install</code></pre><p>##7.配置环境变量</p><pre><code>export PATH=$PATH:/usr/local/Python37/bin</code></pre><p>##8.注册软连接（符号链接）</p><pre><code>ln -s /usr/local/Python37/bin/python3 /usr/bin/python3</code></pre><p>硬链接 - 文件的引用，只要引用数不为0，文件就不会被删除<br>软链接 - 相当于是文件的快捷方式，如果文件被删除，软链接就会失效<br>ln -s 带完整路径的文件名，链接文件名</p>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>MySQL预习</title>
      <link href="/2018/10/15/MySQL%E9%A2%84%E4%B9%A0/"/>
      <url>/2018/10/15/MySQL%E9%A2%84%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL预习"><a href="#MySQL预习" class="headerlink" title="MySQL预习"></a>MySQL预习</h1><h3 id="MySQL目录结构"><a href="#MySQL目录结构" class="headerlink" title="MySQL目录结构"></a>MySQL目录结构</h3><ul><li>bin目录，存储可执行文件</li><li>data目录，存储数据文件</li><li>docs，文档</li><li>include目录，存储包含的头文件</li><li>lib目录，存储库文件</li><li>share，错误消息和字符集文件</li></ul><h3 id="MySQL的配置选项"><a href="#MySQL的配置选项" class="headerlink" title="MySQL的配置选项"></a>MySQL的配置选项</h3><ul><li><p><strong>修改编码方式</strong></p><p><strong>[mysql]</strong></p><p><strong>default-character-set=utf8</strong></p><p><strong>[mysqld]</strong></p><p><strong>character-set-server=utf8</strong></p></li></ul><h3 id="MySQL服务的启动和关闭"><a href="#MySQL服务的启动和关闭" class="headerlink" title="MySQL服务的启动和关闭"></a>MySQL服务的启动和关闭</h3><ul><li><p><strong>启动MySQL服务</strong></p><p><strong>net start mysql</strong></p></li><li><p><strong>关闭MySQL服务</strong></p><p><strong>net stop mysql</strong></p></li></ul><h3 id="MySQL的使用"><a href="#MySQL的使用" class="headerlink" title="MySQL的使用"></a>MySQL的使用</h3><ol><li><p><strong>MySQL登录</strong></p><ul><li><p>mysql  参数</p><p><img src="/2018/10/15/MySQL预习/MySQL1.jpg" alt="MySQL1"></p></li></ul></li><li><p><strong>MySQL退出</strong></p><ul><li><strong>mysql &gt; exit;</strong></li><li><strong>mysql &gt; quit;</strong></li><li><strong>mysql &gt; \q;</strong></li></ul></li></ol><h3 id="修改MySQL提示符"><a href="#修改MySQL提示符" class="headerlink" title="修改MySQL提示符"></a>修改MySQL提示符</h3><ul><li><p><strong>连接客户端时通过参数指定</strong></p><p><code>shell&gt;mysql -uroot -proot -prompt 提示符</code>    </p></li><li><p><strong>连接上客户端后，通过prompt的命令来实现</strong></p><ul><li><code>mysql&gt;prompt 提示符</code>    <ul><li><strong>\D ———– 完整的日期</strong></li><li><strong>\d ———– 当前数据库</strong></li><li><strong>\h ———– 服务器的名称</strong></li><li><strong>\u ———– 当前用户</strong></li></ul></li></ul></li></ul><h3 id="MySQL常用命令"><a href="#MySQL常用命令" class="headerlink" title="MySQL常用命令"></a>MySQL常用命令</h3><ul><li><p><strong>显示当前服务器版本</strong></p><p><strong>SELECT  VERSION();</strong></p></li><li><p><strong>显示当前日期时间</strong></p><p><strong>SELECT  NOW();</strong></p></li><li><p><strong>显示当前用户</strong></p><p><strong>SELECT  USER();</strong></p></li></ul><h3 id="MySQL语句的规范"><a href="#MySQL语句的规范" class="headerlink" title="MySQL语句的规范"></a>MySQL语句的规范</h3><ul><li><strong>关键字与函数名称全部大写</strong></li><li><strong>数据库名称、表名称、字段名称全部小写</strong></li><li><strong>SQL语句必须以分号结尾</strong></li></ul><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><ul><li><p><strong>CREATE {DATABASE | SCHEMA} [IF NOT EXISTS] DB_name</strong></p><p><strong>[DEFAULT] CHARACTER SET [=] charset_name</strong></p></li></ul><h3 id="查看当前服务器下的数据表列表"><a href="#查看当前服务器下的数据表列表" class="headerlink" title="查看当前服务器下的数据表列表"></a>查看当前服务器下的数据表列表</h3><ul><li><p><strong>SHOW {DATABASES | SCHEMAS}</strong></p><p><strong>[LIKE ‘pattern‘ | WHERE expr]</strong></p></li></ul><h3 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h3><ul><li><p><strong>ALTER {DATABASE | SCHEMA} [db_name]</strong></p><p><strong>[DEFAULT] CHARACTER SET [=] charset_name</strong></p></li></ul><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><ul><li><strong>DROP {DATABASE | SCHEMA} [IF EXISTS] bd_name</strong></li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Python相关书籍</title>
      <link href="/2018/10/15/Python%E5%8F%82%E8%80%83%E4%B9%A6%E7%B1%8D/"/>
      <url>/2018/10/15/Python%E5%8F%82%E8%80%83%E4%B9%A6%E7%B1%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="Python参考书籍"><a href="#Python参考书籍" class="headerlink" title="Python参考书籍"></a>Python参考书籍</h2><h3 id="入门读物"><a href="#入门读物" class="headerlink" title="入门读物"></a>入门读物</h3><ol><li>《Python基础教程》（<em>Beginning Python From Novice to Professional</em>）</li><li>《Python学习手册》（<em>Learning Python</em>）</li><li>《Python编程》（<em>Programming Python</em>）</li><li>《Python Cookbook》</li><li>《Python程序设计》（<em>Python Programming: An Introduction to Computer Science</em>）</li><li>《Modern Python Cookbook》</li></ol><h3 id="进阶读物"><a href="#进阶读物" class="headerlink" title="进阶读物"></a>进阶读物</h3><ol><li>《Python核心编程》（<em>Core Python Applications Programming</em>）</li><li>《流畅的Python》（<em>Fluent Python</em>）</li><li>《Effective Python：编写高质量Python代码的59个有效方法》（<em>Effective Python 59 Specific Ways to Write Better Python</em>）</li><li>《Python设计模式》（<em>Learning Python Design Patterns</em>）</li><li>《Python高级编程》（<em>Expert Python Programming</em>）</li><li>《Python性能分析与优化》（<em>Mastering Python High Performance</em>）</li></ol><h3 id="Web框架"><a href="#Web框架" class="headerlink" title="Web框架"></a>Web框架</h3><ol><li>《Django基础教程》（<em>Tango with Django</em>）</li><li>《轻量级Django》（<em>Lightweight Django</em>）</li><li>《Python Web开发：测试驱动方法》（<em>Test-Driven Development with Python</em>）</li><li>《Web Development with Django Cookbook》</li><li>《Test-Driven Development with Django》</li><li>《Django Project Blueprints 》</li><li>《Flask Web开发：基于Python的Web应用开发实战》（<em>Flask Web Development: Developing Web Applications with Python</em>）</li><li>《深入理解Flask》（<em>Mastering Flask</em>）</li></ol><h3 id="爬虫开发"><a href="#爬虫开发" class="headerlink" title="爬虫开发"></a>爬虫开发</h3><ol><li>《用Python写网络爬虫》（<em>Web Scraping with Python</em>）</li><li>《精通Python爬虫框架Scrapy》（<em>Learning Scrapy</em>）</li><li>《Python网络数据采集》（<em>Web Scraping with Python</em>）</li><li>《Python爬虫开发与项目实战》</li><li>《Python 3网络爬虫开发实战》</li></ol><h3 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h3><ol><li>《利用Python进行数据分析》（<em>Python for Data Analysis</em>）</li><li>《Python数据科学手册》（<em>Python Data Science Handbook</em>）</li><li>《Python金融大数据分析》（<em>Python for Finance</em>）</li><li>《Python数据可视化编程实战》（<em>Python Data Visualization Cookbook</em>）</li><li>《Python数据处理》（<em>Data Wrangling with Python</em>）</li></ol><h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><ol><li>《Python机器学习基础教程》（<em>Introduction to Machine Learning with Python</em>）</li><li>《Python机器学习实践指南》（<em>Python Machine Learning Blueprints</em>）</li><li>《Python Machine Learning Case Studies》</li><li>《Python机器学习实践：测试驱动的开发方法》（<em>Thoughtful Machine Learning with Python A Test Driven Approach</em>）</li><li>《Python机器学习经典实例》（<em>Python Machine Learning Cookbook</em>）</li><li>《TensorFlow：实战Google深度学习框架》</li></ol>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>Python</title>
      <link href="/2018/10/15/README/"/>
      <url>/2018/10/15/README/</url>
      
        <content type="html"><![CDATA[<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><h3 id="第1天"><a href="#第1天" class="headerlink" title="第1天"></a>第1天</h3><ol><li>前端页面 = 标签(内容) + CSS(显示) + JavaScript(行为)</li><li>JavaScript = ECMAScript + BOM(window) + DOM(document)</li><li>window <ul><li>alert() / prompt() / confirm() / close()</li><li>setInterval() / setTimeout() / clearInterval() / clearTimeout()</li></ul></li><li>document<ul><li>getElementById() / getElementsByTagName() / getElementsByClassName()</li><li>querySelector() / querySelectorAll()</li></ul></li><li>HTMLElement<ul><li>textContent / innerHTML</li></ul></li><li>其他知识<ul><li>Date: getFullYear() / getMonth() / getDate() / getDay()</li><li>Math: Math.random()</li><li>parseInt() / parseFloat()</li></ul></li></ol><h3 id="第2天"><a href="#第2天" class="headerlink" title="第2天"></a>第2天</h3><ol><li>JavaScript中的事件处理<ul><li>在标签上使用onXXX属性来进行事件绑定</li><li>通过代码获取标签绑定onXXX属性</li><li>通过代码获取标签然后使用addEventListener()绑定事件<br>使用removeEventListener()反绑定事件<br>这里有浏览器兼容性问题 对于低版本IE要使用<br>attachEvent() / detachEvent()</li></ul></li><li>事件回调函数和事件对象<ul><li>绑定事件监听器的函数都需要传入事件的回调函数</li><li>程序员知道事件发生的时候需要做什么样的处理但是不知道事件什么时候发生</li><li>所以传入一个函数在将来发生事件的时候由系统进行调用 这种函数就称为回调函数</li><li>回调函数的第一个参数代表事件对象（封装了和事件相关的所有信息）对于低版本IE</li><li>可以通过window.event来获取事件对象</li><li>事件对象的属性和方法：<ul><li>target / srcElement - 事件源（引发事件的标签）</li><li>preventDefault() / returnValue=false - 阻止事件的默认行为</li><li>处理事件有两种顺序：事件冒泡（默认，从内向外）/ 事件捕获（从外向内）</li><li>如果要阻止事件的传播行为（例如阻止事件冒泡）可以使用<br>stopPropagation() / cancelBubble=true</li></ul></li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>vim</title>
      <link href="/2018/10/15/vim/"/>
      <url>/2018/10/15/vim/</url>
      
        <content type="html"><![CDATA[<h3 id="vimrc-——————-保存格式的文件"><a href="#vimrc-——————-保存格式的文件" class="headerlink" title="vimrc ——————- 保存格式的文件"></a>vimrc ——————- 保存格式的文件</h3><h2 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h2><ul><li>文件意外中断，r恢复，b删除</li><li>vim 文件1 文件2 ———– 同时打开多个文件</li><li>vim -d 文件1 文件2 ———— 比较文件1和文件2<h5 id="如果vim打开了多个文件，可以在末行模式中"><a href="#如果vim打开了多个文件，可以在末行模式中" class="headerlink" title="如果vim打开了多个文件，可以在末行模式中"></a>如果vim打开了多个文件，可以在末行模式中</h5></li><li>：ls ——— 查看多个文件的编号</li><li>：b 编号 ——— 跳转文件</li><li>：vs —————- 垂直拆分成两个窗口</li><li>：sp —————- 水平拆分成两个窗口</li><li>Ctrl + w Ctrl + w ————— 将光标移到另一个窗口</li><li>：qa —————– 关闭全部窗口</li></ul><h4 id="vim-文件名-————-进入Linux编辑框"><a href="#vim-文件名-————-进入Linux编辑框" class="headerlink" title="vim 文件名 ———— 进入Linux编辑框"></a>vim 文件名 ———— 进入Linux编辑框</h4><h5 id="刚进入是在命令模式下"><a href="#刚进入是在命令模式下" class="headerlink" title="刚进入是在命令模式下"></a>刚进入是在命令模式下</h5><ul><li>i / a ———- 进入编辑模式或者插入模式</li><li><p>（Esc ——— 退出编辑模式）</p></li><li><p>：/ ?/ /————– 进入末行编辑格式</p><ul><li>set nu / nonu ———— 打开/关闭行号</li><li>set autoindent ———— 保存缩进</li><li>syntax on / off ———- 打开/关闭高量语法</li><li>shift + zz ————– 保存</li><li>wq ————— 保存退出</li><li>q! —————- 强制退出，不保存</li><li>w! —————- 强制保存</li><li>map ———— 映射 快捷键</li><li>imap ————– 在插入模式下映射快捷键</li><li>inoremap ————– 在插入模式下不要递归的映射快捷键</li></ul></li></ul><h5 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h5><ul><li>/正则表达式</li><li>n ——— 正向搜索</li><li>N ——— 反向搜索</li><li>？正则表达式 ——– 反向搜索</li><li>：1,100s/查找内容（正则表达式）/替换内容<br>替换范围substitute/正则表达式/替换内容</li><li>：1,$s/查找内容（正则表达式）/替换内容/gice<ul><li>-g:全局模式</li><li>-i:忽略大小写</li><li>-c:确认模式</li><li>-e:忽略错误</li></ul></li></ul><h5 id="检查工具"><a href="#检查工具" class="headerlink" title="检查工具"></a>检查工具</h5><ul><li>pip3 install pycodestyle —– 初步的代码格式检查工具</li><li>pip3 install pylint ——- 高级代码格式检查</li></ul><h5 id="修改操作权限"><a href="#修改操作权限" class="headerlink" title="修改操作权限"></a>修改操作权限</h5><ul><li>ll ——– 查看模式</li><li>chmod ———— 修改读写模式 </li><li>chmod 数字 ———– 修改模式</li><li>chmod a+x ———— 所有用户都添加操作权限</li><li>chmod u+x g+x o+x ———- 添加执行操作</li><li>Ctrl x &amp; Ctrl o ———– 代码提示并补全</li></ul><h5 id="编辑器操作："><a href="#编辑器操作：" class="headerlink" title="编辑器操作："></a>编辑器操作：</h5><ul><li>在命令模式下：都可以配合数字使用<ul><li>光标移动<ul><li>H ———— 左</li><li>J ————- 下</li><li>K ————- 上</li><li>L ————- 右</li><li>HML ————第一行的第一列/页面中间行的第一列/页面最后一行的第一列</li><li>w ————– 移动一个单词</li><li>gg/1G ——— 到第一行</li><li>G ————- 到最后一行</li><li>$ ———– 行末</li><li>0 ———– 行首</li><li>dd ———– 删掉一行代码</li><li>dw ———- 删一个单词</li><li>Ctrl + e ————- 往下翻一行</li><li>Ctrl + y ————- 往上翻一行</li><li>Ctrl + f ————- 往上翻一页</li><li>Ctrl + b ————- 往下翻一页</li><li>数字 + yy ———- 复制多少行</li><li>p ———- 粘贴</li><li>u ————– 撤销</li><li>Ctrl + r ————- 反撤销</li></ul></li></ul></li></ul><h2 id="vim模式下的Python"><a href="#vim模式下的Python" class="headerlink" title="vim模式下的Python"></a>vim模式下的Python</h2><h4 id="三元运算："><a href="#三元运算：" class="headerlink" title="三元运算："></a>三元运算：</h4><ul><li>if成立取前面，不成立取后面</li></ul><p><code>y = year if month &gt;= 3 else year - 1</code></p><h4 id="占位"><a href="#占位" class="headerlink" title="占位"></a>占位</h4><ul><li>{} ————— 占位符，与%d的作用一样</li></ul><p><code>print(f&#39;{month_names[month]} {year}&#39;.center(20))</code></p><h4 id="字符居中"><a href="#字符居中" class="headerlink" title="字符居中"></a>字符居中</h4><p><code>print（f&#39;{}&#39;.center(num))</code></p><h4 id="取命令行参数："><a href="#取命令行参数：" class="headerlink" title="取命令行参数："></a>取命令行参数：</h4><p>从标准输入读取数据</p><pre><code>调用函数 import sys if len(sys.argv) == 3:     year = int(sys.argv[2])     month = int(sys.argv[1])</code></pre><h4 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h4><p>&emsp;&emsp;在某个时候必须给一个确定的结果，递归函数必须要有一个出口；然后必须要有一个递归公式，在函数中调用函数的部分</p><h4 id="动态规划：牺牲空间，减少时间"><a href="#动态规划：牺牲空间，减少时间" class="headerlink" title="动态规划：牺牲空间，减少时间"></a>动态规划：牺牲空间，减少时间</h4><p>优化重复计算的过程，用一个字典保存要重复计算的值，当需要时直接查找字典</p><pre><code>if num &lt;= 0:     return 1 if num == 0 else 0  try:     return temp[num]  except KeyError:     temp[num] = walk(num - 1) + walk(num - 2) + walk(num - 3)     return temp[num]</code></pre><h4 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h4><p>终极原则：高内聚 低耦合(一个函数或者一个类只做一个事情，一个函数或者一个类只表示自己，不与其他关联)【high cohesion low coupling】</p><h6 id="在Python中函数是一等公民"><a href="#在Python中函数是一等公民" class="headerlink" title="在Python中函数是一等公民"></a>在Python中函数是一等公民</h6><h6 id="函数可以赋值给变量，可以作为方法的参数和返回值"><a href="#函数可以赋值给变量，可以作为方法的参数和返回值" class="headerlink" title="函数可以赋值给变量，可以作为方法的参数和返回值"></a>函数可以赋值给变量，可以作为方法的参数和返回值</h6><pre><code>def calc(items, fn=lambda x, y: x - y):     result = items[0]    for index in range(1, len(items)):        result = fn(result,items[index])    return resultitems = [1, 2, 3, 4, 5]    print(calc(items, lambda x, y: x + y))    print(calc(items, lambda x, y: x * y))</code></pre><h4 id="类"><a href="#类" class="headerlink" title="类"></a>类</h4><p>面向对象的程序设计基本上就是三步走：</p><ol><li>定义类<br>-数据抽象：找属性（名词）<br>-行为抽象：找方法（动词）</li><li>创建对象</li><li>给对象发消息</li></ol><h4 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h4><pre><code>def foo(*args, **kwargs)*args ------- 可变参数（不知道有多少个参数，可以通过*号表示）**kwargs --------- 关键字参数（给了参数名的参数，会被打包成一个字典传入函数）默认参数 ----------- 不传入参数def foo1(a, *, b, c)*前面的参数是位置参数在传参的时候可以不用指定参数名*后面的参数是命名关键字参数在传参的时候必须指定参数名否则报错解包items = [1, 2, 3, 4, 5]start， *_ ， end = items（取列表的第一个数和最后一个数）</code></pre><h4 id="装饰器"><a href="#装饰器" class="headerlink" title="装饰器"></a>装饰器</h4><ul><li>a.装饰器函数：用一个函数装饰另一个函数，给它增加额外的功能</li><li>b.装饰器函数的参数是被装饰的函数，返回的是起装饰作用的函数</li><li>c.当调用被装饰的函数时，其实是执行装饰器中返回的那个函数</li><li>d.凡是需要这个额外功能的函数，只需要加上装饰器即可，而不需要书写重复的代码</li><li>e.给函数添加装饰器的语法就是在函数前写上  @装饰器函数</li></ul>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>数据库</title>
      <link href="/2018/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2018/10/15/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<ul><li>数据库 —– database - 数据的仓库（集散地）<ul><li>通过数据库可以实现数据的持久化</li><li>数据持久化：文件操作（读写文件）-文本文件 / Excel</li><li>使用数据库的原因：当我们做数据持久化操作时不仅仅是希望能够把数据长久的保存下来，更为重要的是我们很方便的管理数据，在需要数据的时候能够很方便的把需要的数据取出来</li></ul></li><li>1907s IBM - 关系型数据库<ul><li>理论基础：关系代数和集合论</li><li>具体表象：用二维表（行，列）来组织数据<ul><li>行：记录（1212 电脑城 男） - 实体的具体记录</li><li>列：字段（学号，姓名，性别） - 实体的属性</li></ul></li><li>关系型数据库自己的编程语言 - SQL（结构化查询语言）</li><li>DDL（数据定义语言）：create / drop / alter(修改）</li><li>DML（数据操作语言）: insert / delete /update / select</li><li>DCL（数据控制语言）: grant(授权）/ revoke(撤销）</li><li>关系型数据库产品：<ul><li>Oracle - Oracle 12c</li><li>MySQL -Oracle</li><li>SQLServer</li><li>PostgreSQl</li><li>DB2<h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4></li></ul></li></ul></li><li>SQL （Structred Query Language)</li><li>DDL（数据定义语言）：create / drop / alter(修改）</li><li>DML（数据操作语言）: insert / delete /update / select</li><li>DCL（数据控制语言）: grant(授权）/ revoke(撤销)</li><li>DDL(Data Default Language)</li></ul><p><code>create database school default charset utf8;</code></p><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><p><code>drop database if exists school;</code></p><h4 id="切换到数据库school"><a href="#切换到数据库school" class="headerlink" title="切换到数据库school"></a>切换到数据库school</h4><p><code>use school;</code></p><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><p><code>drop table if exists tb_student;</code></p><h4 id="创建二维表保存数据"><a href="#创建二维表保存数据" class="headerlink" title="创建二维表保存数据"></a>创建二维表保存数据</h4><ul><li>列名 数据类型 约束条件</li><li>非空约束 —- not null</li><li>默认值约束 —– default</li><li>主键 ——- 表中能够唯一标识一条记录的列</li><li>主键约束 —— primary key<pre><code>create table tb_student(stuid int not null,stuname varchar(4) not null,gender bit default 1,brith date,addr varchar(50),primary key (stuid));</code></pre></li><li>修改表<pre><code>alter table tb_student add column tel char(11) not null;alter table tb_student drop column brith;alter table tb_student add score int not null;</code></pre></li><li>插入数据<br>– DMl (Data Manipulation Language)<pre><code>insert into tb_student values (1001, &#39;天明&#39;, 0, &#39;四川&#39;, &#39;17640141329&#39;, 90);insert into tb_student values (1002, &#39;王大锤&#39;, 1, &#39;四川&#39;, &#39;17640141329&#39;,80);insert into tb_student (stuid, tel, stuname, score, addr) values(1003, &#39;17640141329&#39;, &#39;盖聂&#39;, 100, &#39;四川成都&#39;);insert into tb_student (stuid, tel, stuname, score) values(1004, &#39;17640141329&#39;, &#39;张三&#39;, 60),(1005, &#39;17640141329&#39;, &#39;豆丁&#39;, 85),(1006, &#39;17640141329&#39;, &#39;小明&#39;, 55);</code></pre></li><li>删除数据<pre><code>delete from tb_student where stuid=1006;delete from tb_student where stuname=&#39;天明&#39;;delete from tb_student where stuid in (1004, 1006, 2000);</code></pre></li><li>截断数据（删除全表）<br><code>truncate table tb_student;</code></li><li>更新数据<pre><code>update tb_student set addr=&#39;四川绵阳&#39;, gender=0 where stuid in (1003, 1004);</code></pre></li><li>查询数据<pre><code>select * from tb_student;-- 投影select stuname, gender from tb_student;-- 别名（alias --- as）select stuname as 姓名,gender 性别 from tb_student;select stuname as 姓名,if(gender, &#39;男&#39;, &#39;女&#39;) as 性别 from tb_student;select stuname as 姓名,case gender when 1 then &#39;男&#39; else &#39;女&#39; end as 性别 from tb_student;</code></pre></li><li>对列做运算<br>select concat(stuname, ‘: ‘, tel) as 信息 from tb_student;</li><li>筛选<br>select * from tb_student where stuid=1001;</li><li>不等号用&lt;&gt;表示<br><code>`</code><br>select <em> from tb_student where stuid&lt;&gt;1001;<br>select </em> from tb_student where stuid in (1001, 1003, 1005);<br>select stuid, stuname, gender from tb_student where stuid&gt;1002;<br>select stuid, stuname, gender from tb_student where stuid&lt;=1002;<br>select stuid, stuname, gender from tb_student where gender=0;<br>select <em> from tb_student where stuid between 1002 and 1004;<br>select </em> from tb_student where stuid&gt;1004 and gender=0;<br>select * from tb_student where stuid&gt;1004 or gender=0;</li><li>注意：判断一个字段是否为null不能用=和&lt;&gt;<br>select <em> from tb_student where addr is null;<br>select </em> from tb_student where addr is not null;<br><code>`</code></li><li>%是一个通配符表示零个或任意多个字符<pre><code>select * from tb_student where stuname like &#39;张%&#39;;select * from tb_student where stuname like &#39;%三%&#39;;</code></pre></li><li>_也是一个通配符，它表示一个字符<pre><code>select * from tb_student where stuname like &#39;张_&#39;;select * from tb_student where stuname like &#39;张__&#39;;</code></pre></li><li>排序——order by </li><li>默认升序（ascending）可以不写，降序descending必须写<pre><code>select * from tb_student order by stuid desc;select * from tb_student order by tel asc;select * from tb_student order by gender asc, stuid desc;select * from tb_student where gender=0 order by stuid desc;</code></pre></li><li>分页（限制）<pre><code>select * from tb_student limit 3;select * from tb_student limit 3 offset 3;</code></pre></li><li><p>跳过6条信息，查3条信息<br><code>select * from tb_student limit 3 offset 6;</code></p></li><li><p>跳过2条信息，查4条信息</p><pre><code>select * from tb_student limit 2,4;select * from tb_student where gender=1 order by stuid desc limit 0, 3;</code></pre></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title></title>
      <link href="/2018/09/29/hello-world/"/>
      <url>/2018/09/29/hello-world/</url>
      
        <content type="html"><![CDATA[<hr><p>​—<br>title：Hello World<br>date：2018-10-15 07:44:14<br>tags：</p><h2 id="​—"><a href="#​—" class="headerlink" title="​—"></a>​—</h2><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
